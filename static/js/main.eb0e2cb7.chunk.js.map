{"version":3,"sources":["components/imageResults/imageResults.js","components/search/Search.js","App.js","index.js"],"names":["ImageResults","props","imageList","useState","open","currentImg","modal","useModal","handleClose","images","ImageList","cols","map","img","ImageListItem","key","id","src","largeImageURL","alt","ImageListItemBar","title","tags","actionIcon","onClick","handleOpen","color","actions","label","primary","style","marginLeft","marginRight","marginTop","onRequestClose","width","Search","state","searchText","apiUrl","apiKey","onTextChange","e","val","target","value","setState","name","axios","get","then","res","data","hits","catch","err","console","log","this","textAlign","type","backgroundColor","fontSize","borderTopStyle","borderRightStyle","borderLeftStyle","outline","borderBottomStyle","placeholder","onChange","length","Component","App","ReactDOM","render","document","getElementById"],"mappings":"oXAqEeA,MAxDf,SAAsBC,GAAQ,IAWxBC,EAXuB,EACDC,mBAAS,CAAEC,MAAM,EAAOC,WAAY,KADnC,mBACpBC,EADoB,KACbC,EADa,KAOrBC,EAAc,WAClBD,EAAS,CAAEH,MAAM,KAIXK,EAAWR,EAAXQ,OAGNP,EADEO,EAEA,kBAACC,EAAA,EAAD,CAAWC,KAAM,GACdF,EAAOG,KAAI,SAACC,GAAD,OACV,kBAACC,EAAA,EAAD,CAAeC,IAAKF,EAAIG,IACtB,yBAAKC,IAAKJ,EAAIK,cAAeC,IAAI,KACjC,kBAACC,EAAA,EAAD,CACEC,MAAOR,EAAIS,KACXC,WACE,kBAAC,IAAD,CAAYC,QAAS,kBApBhB,SAACX,GAClBN,EAAS,CAAEH,MAAM,EAAMC,WAAYQ,IAmBIY,CAAWZ,EAAIK,iBACxC,kBAAC,IAAD,CAAQQ,MAAM,kBAShB,KAEd,IAAMC,EAAU,CACd,kBAAC,IAAD,CAAYC,MAAM,QAAQC,SAAS,EAAML,QAAShB,KAEpD,OACE,yBAAKsB,MAAO,CAAEC,WAAY,GAAIC,YAAa,GAAIC,UAAW,KACvD/B,EACD,kBAAC,IAAD,CACEyB,QAASA,EACTrB,OAAO,EACPF,KAAME,EAAMF,KACZ8B,eAAgB1B,GAEhB,yBAAKS,IAAKX,EAAMD,WAAYc,IAAI,GAAGW,MAAO,CAAEK,MAAO,aCG5CC,E,4MA3DXC,MAAM,CACFC,WAAW,GACXC,OAAO,0BACPC,OAAO,qCACP/B,OAAO,I,EAEXgC,aAAa,SAACC,GACV,IAAMC,EAAID,EAAEE,OAAOC,MACnB,EAAKC,SAAL,eAAgBJ,EAAEE,OAAOG,KAAMJ,IAAK,WACvB,KAANA,EAEC,EAAKG,SAAS,CAACrC,OAAO,KAG1BuC,IACCC,IADD,UAEO,EAAKZ,MAAME,OAFlB,iBAEiC,EAAKF,MAAMG,OAF5C,cAGQ,EAAKH,MAAMC,WAHnB,sCAMCY,MAAK,SAAAC,GAAG,OAAE,EAAKL,SAAS,CAACrC,OAAO0C,EAAIC,KAAKC,UACzCC,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,U,uDAM5B,OADAC,QAAQC,IAAIC,KAAKrB,MAAM5B,QAEnB,6BACA,yBAAKqB,MAAO,CAAC6B,UAAW,WACxB,2BAAOC,KAAK,OACZ9B,MACC,CAAC+B,gBAAgB,QAClBnC,MAAM,QACNoC,SAAS,GACTC,eAAe,SACfC,iBAAiB,SACjBC,gBAAgB,SAChBC,QAAQ,OACRC,kBAAkB,SAClBR,UAAW,UAGfS,YAAY,oBACZrB,KAAK,aACLF,MAAOa,KAAKrB,MAAMC,WAClB+B,SAAUX,KAAKjB,gBAGvB,6BACCiB,KAAKrB,MAAM5B,OAAO6D,OAAO,EAAG,kBAAC,EAAD,CAAc7D,OAAQiD,KAAKrB,MAAM5B,SAAW,yBAAKqB,MAAO,CAAC6B,UAAW,SAAUjC,MAAO,UAAzC,8D,GAnDpD6C,a,2BCcNC,E,uKAVX,OACE,kBAAC,IAAD,KACA,6BACA,kBAAC,EAAD,Y,GALYD,aCClBE,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.eb0e2cb7.chunk.js","sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ImageList from \"@mui/material/ImageList\";\r\nimport ImageListItem from \"@mui/material/ImageListItem\";\r\nimport ImageListItemBar from \"@mui/material/ImageListItemBar\";\r\nimport IconButton from \"material-ui/IconButton\";\r\nimport ZoomIn from \"material-ui/svg-icons/action/zoom-in\";\r\nimport Dialog from \"material-ui/Dialog\";\r\nimport FlatButton from \"material-ui/FlatButton\";\r\n// import useWidth from \"../useWidth\"\r\n\r\n// console.log(useWidth);\r\nfunction ImageResults(props) {\r\n  const [modal, useModal] = useState({ open: false, currentImg: \"\" });\r\n\r\n  const handleOpen = (img) => {\r\n    useModal({ open: true, currentImg: img });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    useModal({ open: false });\r\n  };\r\n\r\n  let imageList;\r\n  const { images } = props;\r\n\r\n  if (images) {\r\n    imageList = (\r\n      <ImageList cols={4}>\r\n        {images.map((img) => (\r\n          <ImageListItem key={img.id}>\r\n            <img src={img.largeImageURL} alt=\"\" />\r\n            <ImageListItemBar\r\n              title={img.tags}\r\n              actionIcon={\r\n                <IconButton onClick={() => handleOpen(img.largeImageURL)}>\r\n                  <ZoomIn color=\"white\" />\r\n                </IconButton>\r\n              }\r\n            />\r\n          </ImageListItem>\r\n        ))}\r\n      </ImageList>\r\n    );\r\n  } else {\r\n    imageList = null;\r\n  }\r\n  const actions = [\r\n    <FlatButton label=\"Close\" primary={true} onClick={handleClose} />,\r\n  ];\r\n  return (\r\n    <div style={{ marginLeft: 50, marginRight: 50, marginTop: 20 }}>\r\n      {imageList}\r\n      <Dialog\r\n        actions={actions}\r\n        modal={false}\r\n        open={modal.open}\r\n        onRequestClose={handleClose}\r\n      >\r\n        <img src={modal.currentImg} alt=\"\" style={{ width: \"100%\" }} />\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\nImageResults.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ImageResults;\r\n","import React,{Component} from 'react';\r\nimport axios from 'axios';\r\nimport ImageResults from \"../imageResults/imageResults\";\r\nclass Search extends Component{\r\n    state={\r\n        searchText:'',\r\n        apiUrl:'https://pixabay.com/api',\r\n        apiKey:'17241914-90da7b93c0ccceb734849dcd1',\r\n        images:[]\r\n    };\r\n    onTextChange=(e)=>{\r\n        const val=e.target.value;\r\n        this.setState({[e.target.name]:val},()=>{\r\n            if(val==='')\r\n            {\r\n                this.setState({images:[]});\r\n            }\r\n            else{\r\n            axios\r\n            .get(\r\n                `${this.state.apiUrl}/?key=${this.state.apiKey}&q=${\r\n                    this.state.searchText\r\n                }&image_type=photo&safesearch=true`\r\n            )\r\n            .then(res=>this.setState({images:res.data.hits}))\r\n            .catch(err=>console.log(err));\r\n            }\r\n        });\r\n    };\r\n    render(){\r\n        console.log(this.state.images);\r\n        return(\r\n            <div>\r\n            <div style={{textAlign: 'center'}}>\r\n            <input type=\"text\" \r\n            style=\r\n            {{backgroundColor:'black',\r\n            color:'white',\r\n            fontSize:30,\r\n            borderTopStyle:\"hidden\",\r\n            borderRightStyle:\"hidden\",\r\n            borderLeftStyle:\"hidden\",\r\n            outline:\"none\",\r\n            borderBottomStyle:\"groove\",\r\n            textAlign: 'center'\r\n        \r\n        }}\r\n        placeholder=\"Search for images\"\r\n        name=\"searchText\"\r\n        value={this.state.searchText}\r\n        onChange={this.onTextChange}\r\n             />\r\n            </div>\r\n<br />\r\n{this.state.images.length>0?(<ImageResults images={this.state.images}/>):<div style={{textAlign: 'center', color: 'white'}}>No images to preview, please try other search results</div>}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Search;","import React, { Component } from 'react';\r\nimport Search from \"./components/search/Search\";\r\nimport './App.css';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\r\n\r\nclass App extends Component{\r\n  render(){\r\n    return(\r\n      <MuiThemeProvider>\r\n      <div>\r\n      <Search />\r\n      </div>\r\n      </MuiThemeProvider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  \r\n    <App />,\r\n\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}